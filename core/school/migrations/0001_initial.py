# Generated by Django 2.2.12 on 2022-03-17 19:38

import core.security.audit_mixin.mixin
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):


    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('start_date', models.DateField(default=datetime.datetime.now)),
                ('end_date', models.DateField(default=datetime.datetime.now)),
                ('web_address', models.CharField(max_length=200, verbose_name='Enlace')),
                ('rubric', models.ImageField(blank=True, null=True, upload_to='activities/%Y/%m/%d', verbose_name='Rubrica')),
                ('punctuation', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('desc', models.CharField(max_length=1500, verbose_name='Descripción')),
                ('state', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Actividad',
                'verbose_name_plural': 'Actividades',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Breakfast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Desayuno',
                'verbose_name_plural': 'Desayunos',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Canton',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Cantón',
                'verbose_name_plural': 'Cantones',
                'ordering': ['-id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Compañia')),
                ('ruc', models.CharField(max_length=13, unique=True, verbose_name='Ruc')),
                ('mobile', models.CharField(max_length=10, unique=True, verbose_name='Teléfono')),
                ('email', models.CharField(max_length=50, unique=True, verbose_name='Correo Electrónico')),
                ('address', models.CharField(max_length=255, verbose_name='Dirección')),
                ('image', models.ImageField(blank=True, null=True, upload_to='company/%Y/%m/%d', verbose_name='Logo')),
                ('mission', models.CharField(max_length=1000, verbose_name='Misión')),
                ('vision', models.CharField(max_length=1000, verbose_name='Visión')),
                ('about_us', models.CharField(max_length=1000, verbose_name='Quienes Somos')),
                ('desc', models.CharField(max_length=1000, verbose_name='Descripción')),
                ('coordinates', models.CharField(max_length=50, verbose_name='Coordenadas')),
            ],
            options={
                'verbose_name': 'Compañia',
                'verbose_name_plural': 'Compañias',
                'db_table': 'empresa',
                'ordering': ['-id'],
                'permissions': (('view_company', 'Can view Compañia'),),
                'default_permissions': (),
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ConferenceTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Tema de Conferencia',
                'verbose_name_plural': 'Temas de Conferencias',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Contracts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=datetime.datetime.now, null=b'I01\n', verbose_name='Fecha de inicio')),
                ('end_date', models.DateField(default=datetime.datetime.now, null=b'I01\n', verbose_name='Fecha de finalización')),
                ('base_salary', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, verbose_name='Salario Base')),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Contrato',
                'verbose_name_plural': 'Contratos',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, unique=True, verbose_name='Código')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Paises',
                'ordering': ['-id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Cursos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=23, verbose_name='Nombre')),
                ('descrip', models.CharField(max_length=70, verbose_name='Descripción')),
                ('max_coupon', models.IntegerField(blank=True, null=True, verbose_name='Cupo máximo de estudiantes')),
                ('min_coupon', models.IntegerField(blank=True, null=True, verbose_name='Cupo mínimo de estudiantes')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nombres')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Apellidos')),
                ('ci', models.CharField(blank=True, max_length=10, null=True, verbose_name='Cédula de identidad')),
                ('relationship', models.CharField(blank=True, max_length=30, null=True, verbose_name='Parentesco')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Edad')),
                ('civil_status', models.CharField(blank=True, choices=[('Soltero/a', 'Soltero/a'), ('Casado/a', 'Casado/a'), ('Divorciado/a', 'Divorciado/a'), ('Viudo/a', 'Viudo/a')], max_length=20, null=True, verbose_name='Estado civil')),
                ('disability', models.BooleanField(blank=True, default=False, null=True, verbose_name='Discapacidad')),
                ('disability_type', models.CharField(blank=True, max_length=30, null=True, verbose_name='Tipo de discapacidad')),
                ('cat_illnesses', models.BooleanField(blank=True, default=False, null=True, verbose_name='Enfermedades catastróficas')),
                ('cat_illnesses_desc', models.TextField(blank=True, null=True, verbose_name='Descripción de enfermedades catastróficas')),
                ('academic_training', models.CharField(blank=True, max_length=50, null=True, verbose_name='Formación académica')),
                ('occupation', models.CharField(blank=True, max_length=30, null=True, verbose_name='Ocupación')),
                ('economic_income', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=9, null=True, verbose_name='Ingresos')),
            ],
            options={
                'verbose_name': 'Familiar',
                'verbose_name_plural': 'Familiares',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Puesto de Trabajo',
                'verbose_name_plural': 'Puesto de Trabajos',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Matriculation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(default=datetime.datetime.now)),
                ('level', models.ForeignKey(max_length=30, on_delete=django.db.models.deletion.PROTECT, to='school.Cursos', verbose_name='Nivel')),
            ],
            options={
                'verbose_name': 'Matriculación',
                'verbose_name_plural': 'Matriculaciones',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Matter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('level', models.ForeignKey(max_length=30, on_delete=django.db.models.deletion.PROTECT, to='school.Cursos', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Materia',
                'verbose_name_plural': 'Materias',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NoteDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('start_date', models.DateField(default=datetime.datetime.now)),
                ('end_date', models.DateField(default=datetime.datetime.now)),
                ('desc', models.CharField(max_length=1500, verbose_name='Descripción')),
                ('state', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Nota',
                'verbose_name_plural': 'Notas',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Parish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('canton', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Canton', verbose_name='Cantón')),
            ],
            options={
                'verbose_name': 'Parroquia',
                'verbose_name_plural': 'Parroquias',
                'ordering': ['-id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('initial_date', models.DateField(blank=True, null=True, verbose_name='Fecha de inicio')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Fecha final')),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Periodo',
                'verbose_name_plural': 'Periodos',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PeriodDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Contracts')),
                ('matter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Matter')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Period')),
            ],
            options={
                'verbose_name': 'Periodo Detalle',
                'verbose_name_plural': 'Periodos Detalles',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('code', models.CharField(max_length=4, unique=True, verbose_name='Código')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Country', verbose_name='País')),
            ],
            options={
                'verbose_name': 'Provincia',
                'verbose_name_plural': 'Provincias',
                'ordering': ['-id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Scores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('score', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
            ],
            options={
                'verbose_name': 'RB Puntaje',
                'verbose_name_plural': 'RB Puntajes',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Shifts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Turno',
                'verbose_name_plural': 'Turnos',
                'ordering': ['-id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('masculino', 'Masculino'), ('femenino', 'Femenino')], max_length=10, verbose_name='Género')),
                ('mobile', models.CharField(max_length=10, unique=True, verbose_name='Teléfono celular')),
                ('phone', models.CharField(blank=True, max_length=10, null=True, verbose_name='Teléfono convencional')),
                ('emergency_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono de emergencia')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Dirección')),
                ('birthdate', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de nacimiento')),
                ('birth_city', models.CharField(blank=True, max_length=30, null=True, verbose_name='Ciudad de nacimiento')),
                ('nationality', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nacionalidad')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Edad')),
                ('ethnicity', models.CharField(blank=True, max_length=50, null=True, verbose_name='Etnia')),
                ('religion', models.CharField(blank=True, max_length=50, null=True, verbose_name='Religión')),
                ('birth_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='school.Country', verbose_name='País de nacimiento')),
                ('birth_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='school.Province', verbose_name='Provincia de nacimiento')),
                ('parish', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='school.Parish', verbose_name='Parroquia')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
                'ordering': ['-id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TypeActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Tipo de Actividad',
                'verbose_name_plural': 'Tipos de Actividades',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TypeCVitae',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Tipo de Hoja de Vida',
                'verbose_name_plural': 'Tipos de Hoja de Vida',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TypeEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('economic_sanction', models.BooleanField(default=False, verbose_name='Sanción económica')),
            ],
            options={
                'verbose_name': 'Tipo de Evento',
                'verbose_name_plural': 'Tipos de Eventos',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TypeResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Tipo de Recurso',
                'verbose_name_plural': 'Tipos de Recursos',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Tutorials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de registro')),
                ('horary', models.CharField(choices=[('1', '07:00 - 08:00'), ('2', '08:00 - 09:00'), ('3', '09:00 - 10:00'), ('4', '10:00 - 11:00'), ('5', '11:00 - 12:00'), ('6', '12:00 - 13:00'), ('7', '13:00 - 14:00'), ('8', '14:00 - 15:00'), ('9', '15:00 - 16:00'), ('10', '16:00 - 17:00')], max_length=100, verbose_name='Horario')),
                ('desc', models.CharField(max_length=500, verbose_name='Descripción')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Contracts', verbose_name='Profesor')),
            ],
            options={
                'verbose_name': 'Tutoría',
                'verbose_name_plural': 'Tutorías',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('masculino', 'Masculino'), ('femenino', 'Femenino')], max_length=10, verbose_name='Género')),
                ('mobile', models.CharField(max_length=10, unique=True, verbose_name='Teléfono celular')),
                ('email_institucional', models.EmailField(blank=True, max_length=50, null=True, verbose_name='Correo institucional')),
                ('phone', models.CharField(blank=True, max_length=10, null=True, verbose_name='Teléfono convencional')),
                ('birthdate', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de nacimiento')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Dirección')),
                ('reference', models.CharField(blank=True, max_length=80, null=True, verbose_name='Lugar de referencia')),
                ('nationality', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nacionalidad')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Edad')),
                ('ethnicity', models.CharField(blank=True, max_length=50, null=True, verbose_name='Etnia')),
                ('religion', models.CharField(blank=True, max_length=50, null=True, verbose_name='Religión')),
                ('civil_status', models.CharField(blank=True, choices=[('Soltero/a', 'Soltero/a'), ('Casado/a', 'Casado/a'), ('Divorciado/a', 'Divorciado/a'), ('Viudo/a', 'Viudo/a')], max_length=20, null=True, verbose_name='Estado civil')),
                ('blood_group', models.CharField(blank=True, choices=[('O-', 'O-'), ('O+', 'O+'), ('A-', 'A-'), ('A+', 'A+'), ('B-', 'B-'), ('B+', 'B+'), ('AB-', 'AB-'), ('AB+', 'AB+')], max_length=5, null=True, verbose_name='Grupo sanguíneo')),
                ('disability', models.BooleanField(blank=True, default=False, null=True, verbose_name='Discapacidad')),
                ('disability_percentage', models.IntegerField(blank=True, default=0, null=True, verbose_name='Porcentaje de discapacidad')),
                ('disability_type', models.CharField(blank=True, max_length=30, null=True, verbose_name='Tipo de discapacidad')),
                ('cat_illnesses', models.BooleanField(blank=True, default=False, null=True, verbose_name='Enfermedades catastróficas')),
                ('cat_illnesses_desc', models.TextField(blank=True, null=True, verbose_name='Descripción de enfermedades catastróficas')),
                ('croquis', models.FileField(blank=True, null=True, upload_to='teacher/croquis/%Y/%m/%d', verbose_name='Croquis PDF')),
                ('basic_services_payment', models.FileField(blank=True, null=True, upload_to='teacher/bs-payment/%Y/%m/%d', verbose_name='Comprobante de servicios básicos')),
                ('ci_doc', models.FileField(blank=True, null=True, upload_to='teacher/ci/%Y/%m/%d', verbose_name='Cédula de identidad')),
                ('commitment_act', models.FileField(blank=True, null=True, upload_to='teacher/acta/%Y/%m/%d', verbose_name='Acta de compromiso')),
                ('contract', models.FileField(blank=True, null=True, upload_to='teacher/contrato/%Y/%m/%d', verbose_name='Contrato firmado')),
                ('cv_doc', models.FileField(blank=True, null=True, upload_to='teacher/cv-doc/%Y/%m/%d', verbose_name='Hoja de vida')),
                ('parish', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='school.Parish', verbose_name='Lugar residencia')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profesor',
                'verbose_name_plural': 'Profesores',
                'ordering': ['-id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StudentMedicalRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True, verbose_name='Peso')),
                ('size', models.CharField(blank=True, max_length=20, null=True, verbose_name='Talla')),
                ('height', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True, verbose_name='Altura')),
                ('blood_group', models.CharField(blank=True, choices=[('O-', 'O-'), ('O+', 'O+'), ('A-', 'A-'), ('A+', 'A+'), ('B-', 'B-'), ('B+', 'B+'), ('AB-', 'AB-'), ('AB+', 'AB+')], max_length=5, null=True, verbose_name='Grupo sanguíneo')),
                ('donor', models.BooleanField(blank=True, default=False, null=True, verbose_name='Donante')),
                ('vaccine_card', models.FileField(blank=True, null=True, upload_to='smr/vaccinecard/%Y/%m/%d', verbose_name='Carnet de vacunas')),
                ('disability', models.BooleanField(blank=True, default=False, null=True, verbose_name='Discapacidad')),
                ('disability_type', models.CharField(blank=True, max_length=30, null=True, verbose_name='Tipo de discapacidad')),
                ('disability_per', models.IntegerField(blank=True, null=True, verbose_name='Porcentaje de discapacidad')),
                ('allergies', models.BooleanField(blank=True, default=False, null=True, verbose_name='Alergias')),
                ('allergies_desc', models.TextField(blank=True, null=True, verbose_name='Descripción de las alergias')),
                ('allergy_treatment', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tratamiento de las alergias')),
                ('diseases_suffered', models.BooleanField(blank=True, default=False, null=True, verbose_name='Enfermedades padecidas')),
                ('diseases_suffered_desc', models.TextField(blank=True, null=True, verbose_name='Descripción de enfermedades padecidas')),
                ('pre_diseases', models.BooleanField(blank=True, default=False, null=True, verbose_name='Enfermedades preexistentes')),
                ('pre_diseases_desc', models.TextField(blank=True, null=True, verbose_name='Descripción de enfermedades preexistentes')),
                ('cat_illnesses', models.BooleanField(blank=True, default=False, null=True, verbose_name='Enfermedades catastróficas')),
                ('cat_illnesses_desc', models.TextField(blank=True, null=True, verbose_name='Descripción de enfermedades catastróficas')),
                ('medication', models.BooleanField(blank=True, default=False, null=True, verbose_name='Medicación')),
                ('medication_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tipo de medicación')),
                ('medication_schedule', models.CharField(blank=True, max_length=50, null=True, verbose_name='Horario de medicación')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='school.Student', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Ficha médica',
                'verbose_name_plural': 'Fichas médicas',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SchoolFeeding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de registro')),
                ('cant', models.IntegerField(default=0, verbose_name='Cantidad')),
                ('desc', models.CharField(blank=True, max_length=500, null=True, verbose_name='Descripción')),
                ('breakfast', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Breakfast', verbose_name='Tipo de colación')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Student', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Alimentación escolar',
                'verbose_name_plural': 'Alimentación escolares',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de inicio')),
                ('end_date', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de finalización')),
                ('web_address', models.CharField(max_length=200, verbose_name='Enlace')),
                ('desc', models.CharField(max_length=1500, verbose_name='Descripción')),
                ('perioddetail', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.PeriodDetail', verbose_name='Matería')),
                ('typeresource', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.TypeResource', verbose_name='Tipo de Recurso')),
            ],
            options={
                'verbose_name': 'Recurso',
                'verbose_name_plural': 'Recursos',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Qualifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archive', models.ImageField(blank=True, null=True, upload_to='qualifications/%Y/%m/%d')),
                ('date_joined', models.DateField(default=datetime.datetime.now)),
                ('note', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.BooleanField(default=False)),
                ('activities', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Activities')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Student')),
            ],
            options={
                'verbose_name': 'Calificación',
                'verbose_name_plural': 'Calificaciones',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Punctuations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(default=datetime.datetime.now)),
                ('note', models.DecimalField(decimal_places=2, default=0.0, max_digits=9)),
                ('comment', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('state', models.BooleanField(default=False)),
                ('evidence_doc', models.FileField(blank=True, null=True, upload_to='punctuations/%Y/%m/%d', verbose_name='Documento de evidencia')),
                ('notedetails', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.NoteDetails')),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Scores')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Student')),
            ],
            options={
                'verbose_name': 'Puntaje',
                'verbose_name_plural': 'Puntajes',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PsychologicalOrientation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de registro')),
                ('desc', models.CharField(max_length=5000, verbose_name='Detalles')),
                ('matriculation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Matriculation', verbose_name='Alumno')),
            ],
            options={
                'verbose_name': 'Orientación Psicológica',
                'verbose_name_plural': 'Orientaciones Psicológica',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.AddField(
            model_name='notedetails',
            name='perioddetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.PeriodDetail', verbose_name='Materia'),
        ),
        migrations.AddField(
            model_name='notedetails',
            name='typeactivity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.TypeActivity', verbose_name='Tipo de Actividad'),
        ),
        migrations.CreateModel(
            name='MatriculationDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matriculation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Matriculation')),
                ('perioddetail', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.PeriodDetail')),
            ],
            options={
                'verbose_name': 'Matriculación ámbito',
                'verbose_name_plural': 'Matriculaciones ámbitos',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.AddField(
            model_name='matriculation',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Period'),
        ),
        migrations.AddField(
            model_name='matriculation',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Student'),
        ),
        migrations.CreateModel(
            name='LegalRepresentative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_rp', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nombres')),
                ('last_name_rp', models.CharField(blank=True, max_length=50, null=True, verbose_name='Apellidos')),
                ('relationship_rp', models.CharField(blank=True, max_length=30, null=True, verbose_name='Parentesco')),
                ('ci_rp', models.CharField(blank=True, max_length=10, null=True, verbose_name='Cédula de identidad')),
                ('nationality_rp', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nacionalidad')),
                ('address_rp', models.CharField(blank=True, max_length=70, null=True, verbose_name='Dirección')),
                ('reference_rp', models.CharField(blank=True, max_length=80, null=True, verbose_name='Referencia')),
                ('cell_phone_rp', models.CharField(blank=True, max_length=20, null=True, verbose_name='Celular')),
                ('conventional_phone_rp', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono convencional')),
                ('emergency_number_rp', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono de emergencia')),
                ('email_rp', models.EmailField(blank=True, max_length=30, null=True, verbose_name='Correo electrónico')),
                ('blood_group_rp', models.CharField(blank=True, choices=[('O-', 'O-'), ('O+', 'O+'), ('A-', 'A-'), ('A+', 'A+'), ('B-', 'B-'), ('B+', 'B+'), ('AB-', 'AB-'), ('AB+', 'AB+')], max_length=5, null=True, verbose_name='Grupo sanguíneo')),
                ('is_working_rp', models.BooleanField(blank=True, default=False, null=True, verbose_name='Trabaja')),
                ('workplace_rp', models.CharField(blank=True, max_length=30, null=True, verbose_name='Lugar de trabajo')),
                ('work_phone_rp', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono del trabajo')),
                ('work_address_rp', models.CharField(blank=True, max_length=70, null=True, verbose_name='Dirección del trabajo')),
                ('work_email_rp', models.EmailField(blank=True, max_length=30, null=True, verbose_name='Correo del trabajo')),
                ('croquis_rp', models.FileField(blank=True, null=True, upload_to='rs/croquis/%Y/%m/%d', verbose_name='Croquis PDF')),
                ('basic_services_payment_rp', models.FileField(blank=True, null=True, upload_to='rs/bs-payment/%Y/%m/%d', verbose_name='Comprobante de servicios básicos')),
                ('image_rp', models.ImageField(blank=True, null=True, upload_to='rs/image/%Y/%m/%d', verbose_name='Fotografía')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='school.Student', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Representante del estudiante',
                'verbose_name_plural': 'Representantes del estudiante',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FamilyGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school.Family', verbose_name='Familiar')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='school.Student', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Grupo familiar',
                'verbose_name_plural': 'Grupos familiares',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de inicio')),
                ('end_date', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de finalización')),
                ('start_time', models.TimeField(default=datetime.datetime.now, verbose_name='Hora de inicio')),
                ('end_time', models.TimeField(default=datetime.datetime.now, verbose_name='Hora de finalización')),
                ('desc', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Detalles')),
                ('valor', models.DecimalField(decimal_places=2, default=0.0, max_digits=9, verbose_name='Valor')),
                ('state', models.BooleanField(default=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Contracts', verbose_name='Contrato')),
                ('typeevent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.TypeEvent', verbose_name='Tipo de Evento')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['-id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CVitae',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('details', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Detalles')),
                ('start_date', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de inicio')),
                ('end_date', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de finalización')),
                ('cv_file', models.FileField(blank=True, null=True, upload_to='teacher/cv/%Y/%m/%d', verbose_name='Archivo')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Teacher', verbose_name='Profesor')),
                ('typecvitae', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.TypeCVitae', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Hoja de Vida',
                'verbose_name_plural': 'Hojas de Vida',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.AddField(
            model_name='contracts',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Job', verbose_name='Cargo'),
        ),
        migrations.AddField(
            model_name='contracts',
            name='shifts',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.PROTECT, to='school.Shifts', verbose_name='Turno'),
        ),
        migrations.AddField(
            model_name='contracts',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Teacher', verbose_name='Profesor'),
        ),
        migrations.CreateModel(
            name='Conferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(default=datetime.datetime.now, verbose_name='Fecha de conferencia')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('desc', models.CharField(blank=True, max_length=500, null=True, verbose_name='Descripción')),
                ('conferencetheme', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.ConferenceTheme', verbose_name='Tema de Conferencia')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Contracts', verbose_name='Profesor')),
            ],
            options={
                'verbose_name': 'Tema de Conferencia',
                'verbose_name_plural': 'Temas de Conferencias',
                'ordering': ['id'],
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.AddField(
            model_name='canton',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Province', verbose_name='Provincia'),
        ),
        migrations.CreateModel(
            name='Assistance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(default=datetime.datetime.now)),
                ('year', models.IntegerField()),
                ('month', models.IntegerField(choices=[('', '-----------'), (1, 'Enero'), (2, 'Febrero'), (3, 'Marzo'), (4, 'Abril'), (5, 'Mayo'), (6, 'Junio'), (7, 'Julio'), (8, 'Agosto'), (9, 'Septiembre'), (10, 'Octubre'), (11, 'Noviembre'), (12, 'Diciembre')], default=0)),
                ('day', models.IntegerField()),
                ('desc', models.CharField(blank=True, max_length=500, null=True)),
                ('state', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fk_teacher', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fk_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Asistencia',
                'verbose_name_plural': 'Asistencias',
                'ordering': ['id'],
                'permissions': (('view_assistance', 'Can view Asistencias'), ('add_assistance', 'Can add Asistencias'), ('delete_assistance', 'Can delete Asistencias')),
                'default_permissions': (),
            },
            bases=(core.security.audit_mixin.mixin.AuditMixin, models.Model),
        ),
        migrations.AddField(
            model_name='activities',
            name='perioddetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.PeriodDetail', verbose_name='Materia'),
        ),
        migrations.AddField(
            model_name='activities',
            name='typeactivity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.TypeActivity', verbose_name='Tipo de Actividad'),
        ),
    ]
